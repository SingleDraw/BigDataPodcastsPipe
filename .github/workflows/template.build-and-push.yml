name: Docker Build and Push

on:
  workflow_call:
    inputs:
      tagMode:
        required: false
        type: string
        default: latest
      contextPath:
        required: true
        type: string
      dockerfilePath:
        required: true
        type: string
    secrets:
      imageName:
        description: 'Name of the Docker image to build and push'
        required: true
      acrLoginServer:
        required: true
      acrUsername:
        required: true
      acrPassword:
        required: true
      tfResourceGroup:
        required: true

jobs:
  check-infra:
    runs-on: ubuntu-latest
    environment: infra-ready
    steps:
      - name: Fail if infra not ready
        run: |
          if [[ "${{ vars.INFRA_READY }}" != "true" ]]; then
            echo "Infrastructure is not ready. Please run the bootstrap workflow first."
            exit 1
          fi


  setup-tag-mode:
    runs-on: ubuntu-latest
    outputs:
      tagMode: ${{ steps.set_tag_mode.outputs.tagMode }}
    steps:
      - name: Set tag mode (default to 'latest' if not set)
        id: set_tag_mode
        run: |
          TAG_MODE="${{ inputs.tagMode }}"
          if [ -z "$TAG_MODE" ]; then
            TAG_MODE="latest"
          fi
          echo "Resolved tag mode: $TAG_MODE"
          echo "tagMode=$TAG_MODE" >> "$GITHUB_OUTPUT"


  build-and-push:
    runs-on: ubuntu-latest
    needs: [check-infra, setup-tag-mode]
    if: github.ref == 'refs/heads/main'

    env:
      TF_LOG: ERROR
      REGISTRY: ${{ secrets.acrLoginServer }}
      REGISTRY_USERNAME: ${{ secrets.acrUsername }}
      REGISTRY_PASSWORD: ${{ secrets.acrPassword }}
      AZURE_RESOURCE_GROUP: ${{ secrets.tfResourceGroup }}
      IMAGE_NAME: ${{ secrets.imageName }}
      CONTEXT_PATH: ${{ inputs.contextPath }}
      DOCKERFILE_PATH: ${{ inputs.dockerfilePath }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Check ACR access
        run: |
          echo "Pinging ACR: $REGISTRY"
          echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY" -u "$REGISTRY_USERNAME" --password-stdin || {
            echo "❌ Failed to authenticate with ACR. Aborting build."
            exit 1
          }
          echo "✅ ACR login successful."

        # Build and push Docker image based on tag mode
      - name: Build and push Docker image
        if: needs.setup-tag-mode.outputs.tagMode == 'both'
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.CONTEXT_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Build and push Docker image
        if: needs.setup-tag-mode.outputs.tagMode == 'latest'
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.CONTEXT_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
