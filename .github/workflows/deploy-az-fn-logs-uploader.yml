name: Deploy Azure Function App
permissions:
    id-token: write
    contents: read

on:
  workflow_dispatch:

env:
    AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
    AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    SUBSCRIPTION_ID: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
    FUNCTION_APP_NAME: "aci-logs-uploader" # ${{ secrets.TF_VAR_FUNCTION_APP_NAME }} # To be implemented in the Terraform module
    RESOURCE_GROUP_NAME: ${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }} 

jobs:
    build-and-deploy:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
  
      - name: Azure Login via OIDC
        uses: azure/login@v2 # Use v2 for OIDC support
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTION_ID }}

      - name: Zip Function App
        run: |
          cd azure_functions/save-logs
          zip -r ../../save_logs_function.zip .
          cd -
        
      - name: Deploy Function App via CLI
        run: |
          az functionapp deployment source config-zip \
            --name ${{ env.FUNCTION_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --src save_logs_function.zip

      - name: Clean up
        run: |
          rm save_logs_function.zip
          echo "Function App deployed successfully!"