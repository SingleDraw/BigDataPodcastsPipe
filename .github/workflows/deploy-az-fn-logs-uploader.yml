name: Deploy Azure Function App

on:
    workflow_dispatch:  # Manual trigger for the workflow
# Uncomment the following lines if you want to trigger on push to main branch
#   push:
#     branches:
#       - main  # or your deploy branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read    # Allow read access to the repository contents
      id-token: write   # Allow writing ID tokens for Azure login

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}


    # Approach 1: Using Azure Functions Action
    # This method uses the Azure Functions Action to deploy the Function App directly from the repository.
    - name: Build and deploy Function App
      uses: azure/functions-action@v1
      with:
        app-name: ${{ secrets.FUNCTION_APP_NAME }}
        package: ./aci_logs_uploader


    # Approach 2: Usinf Azure Functions App Publish Profile
    # Uncomment the following steps if you want to use the publish profile method.

    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.11'

    # - name: Install dependencies
    #   run: |
    #     cd aci_logs_uploader
    #     pip install -r requirements.txt

    # - name: Zip function app
    #   run: |
    #     cd aci_logs_uploader
    #     zip -r ../functionapp.zip .

    # - name: Deploy to Azure Functions
    #   uses: azure/functions-action@v1
    #   with:
    #     app-name: aci-logs-uploader
    #     package: functionapp.zip
    #     publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

